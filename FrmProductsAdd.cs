using DevExpress.Xpo;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.SqlClient;
using System.Drawing;
using System.Globalization;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace TicariOtomasyon
{
    public partial class FrmProductsAdd : Form
    {
        SqlBaglanti bgl = new SqlBaglanti();
        public FrmProductsAdd()
        {
            InitializeComponent();
            VeriGetir();
        }
        void temizle()
        {
            TxtUrunAd.Text = "";
            TxtUrunBarkod.Text = "";
            CmbKategori.SelectedIndex = 0;
            CmbMarka.SelectedIndex = 0;
            CmbRaf.SelectedIndex = 0;
            CmbTedarikci.SelectedIndex = 0;
            CmbModel.SelectedIndex = 0;
            CmbYil.SelectedIndex = 0;
            NudUrunAdet.Text = "";
            TxtUrunFiyat.Text = "";
            RTxtDetay.Text = "";
        }
        void VeriGetir()
        {
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously
            sqlDataSource1.FillAsync();           

        }

        private void BtnUrunKaydet_Click(object sender, EventArgs e)
        {
            string fiyatInput = TxtUrunFiyat.Text;

            //Verileri Kaydetme
            if (TxtUrunAd.Text == "" || TxtUrunBarkod.Text == "" || CmbKategori.SelectedIndex == 0 || CmbMarka.SelectedIndex == 0 || CmbRaf.SelectedIndex == 0 || CmbTedarikci.SelectedIndex == 0 || NudUrunAdet.Text == "0" || TxtUrunFiyat.Text == "" || RTxtDetay.Text == "")
            {
                MessageBox.Show("Lütfen Boş Alanları Doldurunuz", "Uyarı", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                return;
            }
            else
            {
                decimal fiyatDecimal;
                if (!decimal.TryParse(fiyatInput, NumberStyles.Currency, new CultureInfo("tr-TR"), out fiyatDecimal))
                {
                    MessageBox.Show("Lütfen geçerli bir fiyat girin! (ör. 1250,00)", "Hata", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return;
                }


                SqlCommand komut = new SqlCommand("insert into Products (ProductName,Barcode,CategoryID,BrandID,ModelID,YearID,ShelfID,SupplierID,StockLevel,UnitPrice,Description) values (@p1,@p2,@p3,@p4,@p5,@p6,@p7,@p8,@p9,@p10,@p11)", bgl.baglanti());
                komut.Parameters.AddWithValue("@p1", TxtUrunAd.Text);
                komut.Parameters.AddWithValue("@p2", TxtUrunBarkod.Text);
                komut.Parameters.AddWithValue("@p3", CmbKategori.SelectedValue);
                komut.Parameters.AddWithValue("@p4", CmbMarka.SelectedValue);
                komut.Parameters.AddWithValue("@p5", CmbModel.SelectedValue);
                komut.Parameters.AddWithValue("@p6", CmbYil.SelectedValue);
                komut.Parameters.AddWithValue("@p7", CmbRaf.SelectedValue);
                komut.Parameters.AddWithValue("@p8", CmbTedarikci.SelectedValue);
                komut.Parameters.AddWithValue("@p9", NudUrunAdet.Value);
                komut.Parameters.AddWithValue("@p10", fiyatDecimal);
                komut.Parameters.AddWithValue("@p11", RTxtDetay.Text);
                komut.ExecuteNonQuery();
                MessageBox.Show("Ürün Başarıyla Eklendi", "Bilgi", MessageBoxButtons.OK, MessageBoxIcon.Information);
                temizle();
                VeriGetir();
            }
        }
        
    }
}
